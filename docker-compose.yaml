version: '3'
name: ${DEPLOY_ENVIRONMENT:-dev}
services:
  frontend:
    build: frontend
    command: gunicorn -b 0.0.0.0:8050 -w 4 --chdir src 'src.app:server'
    ports:
      - ${FRONTEND_PORT:-9990}:8050
    env_file:
      - .env
    environment:
      PYTHONUNBUFFERED: 1
      SPOTIFY_SCRAPER_DATABASE_URI: postgresql://${POSTGRES_USER:-admin}:${POSTGRES_PASSWORD:-admin}@postgres/${POSTGRES_DB:-metrics}
    networks:
      - homelab_traefik-reverse-proxy
      - database
    labels:
      - "traefik.enable=${TRAEFIK_ENABLE}"
      - "traefik.docker.network=homelab_traefik-reverse-proxy"
      - "traefik.http.routers.spotifymetrics.rule=Host(`spotifymetrics.${DOMAIN}`)"
      - "traefik.http.routers.spotifymetrics.entrypoints=websecure"
      - "traefik.http.routers.spotifymetrics.tls.certresolver=myresolver"

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      POSTGRES_DB: ${POSTGRES_DB:-metrics}
    networks:
      - database

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-password}
    ports:
      - 18500:80
    depends_on:
      - postgres
    networks:
      - database

  scraper:
    build: spotify-scraper
    command: scraper-refresh-data
    env_file:
      - .env
    environment:
      PYTHONUNBUFFERED: 1
      SPOTIFY_SCRAPER_DATABASE_URI: postgresql://${POSTGRES_USER:-admin}:${POSTGRES_PASSWORD:-admin}@postgres/${POSTGRES_DB:-metrics}
    depends_on:
      - postgres
    networks:
      - database

networks:
  homelab_traefik-reverse-proxy:
    external: true
  database:
